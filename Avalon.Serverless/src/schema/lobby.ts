import {
  attribute,
  autoGeneratedHashKey,
  rangeKey,
  hashKey,
  table
} from "@aws/dynamodb-data-mapper-annotations";
import { embed } from "@aws/dynamodb-data-mapper";
import { Player } from "./player";
import { Setup } from "./setup";
import { Game } from "./game";
import moment = require("moment");
import * as uuid from "uuid/v1";

@table(process.env.DYNAMODB_TABLE)
export class Lobby {
  @autoGeneratedHashKey()
  id: string;

  @rangeKey({ defaultProvider: () => new Date() })
  createdAt: Date;

  @hashKey()
  code: string;

  @attribute({ memberType: embed(Player) })
  players: Array<Player>;

  @attribute({ memberType: embed(Setup) })
  setup: Setup;

  @attribute({ memberType: embed(Game) })
  game: Game;

  @attribute()
  connectionId: Array<string>;

  @attribute()
  event: Array<Event>;

  constructor() {
    this.code = uuid()
      .substring(0, 4)
      .toUpperCase();
    this.createdAt = moment(moment.now()).toDate();
    this.game = new Game();
    this.players = [];
    this.setup = new Setup();
    this.event = [];
  }

  getNumberOfPlayers() {
    return this.players.length;
  }
}
